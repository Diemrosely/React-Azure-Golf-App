{"version":3,"sources":["components/golfplayer.js","components/Hero.js","components/GolfStats.js","App.js","reportWebVitals.js","index.js"],"names":["React","Component","getPlayerStats","data","a","params","URLSearchParams","paramString","toString","axios","get","headers","crossDomain","then","res","console","log","Hero","className","PersonScore","props","handleSubmitClick","validateStatInput","newScore","state","input2","alert","newData","cloneDeep","scores","push","updatePlayerStats","error","newState","setState","name","this","Object","keys","value","onChange","e","target","type","onClick","map","item","index","average","handicap","input","trimmed","trim","num","parseInt","length","isNaN","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1f047e5.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default class PersonScore extends React.Component {\n  state = {\n    data: {\n      name: \"Diem\",\n      scores: [42,46,43,48]\n    },\n    scores: {},\n    input2: \"\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(`/api/HttpExample?name=Diem&scores=45,65,35,35`, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          // 'Content-Type': 'text/plain;charset=utf-8',\n          // 'crossDomain': true\n        },\n      })\n      .then((res) => {\n        // debugger;\n        console.log(res);\n        const scores = res.data;\n        this.setState({ scores: scores });\n      });\n    // const info = JSON.parse('{\"name\":\"Diem\",\"scores\":[\"45\",\"56\",\"67\",\"48\"],\"average\":56,\"handicap\":16}');\n    // this.setState({person: info})\n    // debugger;\n  }\n\n  handleSubmitClick=async()=>{\n    let newScore = this.state.input2\n    let newData = this.state.data\n    newData.scores.push(newScore)\n    let data = await getPlayerStats(newData);\n    console.log(\"gotResponse\")\n    console.log(data)\n    if(data){\n      let newState={...this.state}\n      newState.data=data\n      this.setState(newState)\n      // this.forceUpdate()\n      console.log(\"setState\")\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    let data = this.state.data;\n    //spit out array of all keys in object\n    let keys = Object.keys(data);\n    return (\n      <>\n        <nav></nav>\n        <section>\n          <h2>{data.name}</h2>\n          {/* <input onChange={(e) => {\n          console.log(e.target.value)\n          this.setState({input:e.target.value})\n        }}>\n        </input>\n        {\n          this.state.input\n        } */}\n          <input\n            value={this.state.input2}\n            //anonymous function\n            onChange={(e) => {\n              console.log(e.target.value);\n              this.setState({ input2: e.target.value });\n            }}\n          ></input>\n          {this.state.input2}\n          <button\n          //named function (never call just give)\n            onClick={this.handleSubmitClick}>\n            Submit Score\n          </button>\n          {/* <input onChange = {(e)=>{\n            console.log(e.target.value);\n            this.setState({ input3: e.target.value });\n          }}>\n          </input>\n          <button onClick ={()=>{\n            let newState={...this.state}\n            newState.data.scores.push(this.state.input3)\n            this.setState(newState)\n          }}> Add Score\n          </button> */}\n        </section>\n        <section>\n          {/* array of all keys of object */}\n          {keys.length>0 && (\n            <ul>\n              {keys.map((key, index) => (\n                <li key={index}>\n                  {key}:{data[key]}\n                </li>\n              ))}\n            </ul>\n          )}\n        </section>\n        <section>Table</section>\n      </>\n    );\n  }\n}\n\nasync function getPlayerStats(data) {\n  const params = new URLSearchParams({\n    ...data,\n  });\n  const paramString = params.toString();\n  //Prints \"var1=value&var2=value2&arr=foo\"\n  return await axios\n    .get(`/api/HttpExample?${paramString}`, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        crossDomain: true,\n      },\n    })\n    .then((res) => {\n      // debugger;\n      console.log(res);\n      const scores = res.data;\n      return scores;\n    });\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction Hero (){\n\n\n  \n      return (<div className='heroContainer'>\n      <h1 className='heroText'>Golf Tracker</h1> <div className='heroOverlay'></div>\n      </div>)\n  \n}\n\nexport default Hero;","import React from \"react\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport Col from \"react-bootstrap/Col\";\nimport InputGroupWithExtras from \"react-bootstrap/esm/InputGroup\";\nimport {cloneDeep} from \"lodash\";\n\nexport default class PersonScore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        name: \"Diem\",\n        scores: [42, 46, 43, 48],\n      },\n      scores: {},\n      input2: \"\",\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`/api/HttpExample?name=Diem&scores=45,65,35,35`, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      })\n      .then((res) => {\n        // debugger;\n        this.setState({ data: res.data });\n      });\n  }\n\n  handleSubmitClick = async () => {\n    let newScore = this.state.input2;\n    if(!validateStatInput(newScore)){\n        alert('Please enter valid input') \n        return;\n    }\n    let newData = cloneDeep(this.state.data);\n    // let newData = [...this.state.data];\n    newData.scores.push(newScore);\n    let data = await updatePlayerStats(newData);\n    console.log(\"gotResponse\");\n    console.log(data);\n    if (data && !data.error) {\n      let newState = { ...this.state };\n      newState.data = data;\n      this.setState(newState);\n      // this.forceUpdate()\n    }else if(data){\n        alert(data.error)\n        return;\n    }\n  };\n\n  render() {\n    console.log(this.state);\n    let data = this.state.data;\n    //spit out array of all keys in object\n    let keys = Object.keys(data);\n    return (\n      <>\n        <nav></nav>\n\n        <section className=\"flexColumn\">\n          <div className=\"grayBack userName\">{data.name}</div>\n          <br></br>\n          <div>\n            <input\n              value={this.state.input2}\n              //anonymous function\n              onChange={(e) => {\n                console.log(e.target.value);\n                this.setState({ input2: e.target.value });\n              }}\n            ></input>\n            <input className='jura'\n              type=\"button\"\n              value=\"Submit Score\"\n              //named function (never call just give)\n              onClick={this.handleSubmitClick}\n            ></input>\n          </div>\n        </section>\n\n        <section className=\"lilboxSection\">\n          {/* array of all keys of object */}\n          {this.state.data.scores.map((item, index) => {\n            return (\n              <div key={index} className=\"lilbox\">\n                {\" \"}\n                {item}\n              </div>\n            );\n          })}\n        </section>\n        <section className=\"lilboxSection\">\n          <div className=\"bigBox\">\n            <h4>\n              Average Score:<br></br> {this.state.data.average}{\" \"}\n            </h4>\n          </div>\n          <div className=\"bigBox\">\n            <h4>\n              Handicap Score: <br></br> {this.state.data.handicap}{\" \"}\n            </h4>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nasync function updatePlayerStats(data) {\n  const params = new URLSearchParams({\n    ...data,\n  });\n  const paramString = params.toString();\n  //Prints \"var1=value&var2=value2&arr=foo\"\n  return await axios\n    .get(`/api/HttpExample?${paramString}`, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        crossDomain: true,\n      },\n    })\n    .then((res) => {\n      // debugger;\n      console.log(res);\n      const scores = res.data;\n      return scores;\n    });\n}\n\n\nfunction validateStatInput(input){\n    let trimmed = input.trim()\n    let num = parseInt(trimmed)\n    let type = typeof num\n    \n\tconsole.log(trimmed, num, type, type !== 'number')\n  \n  \tif(trimmed.length == 0 ){\n        return false;\n    } else if(isNaN(num)){\n        return false;\n    } \n    return true;\n}","import React from 'react';\nimport './App.css';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport PersonScore from \"./components/golfplayer\"\nimport Col from 'react-bootstrap/Col';\nimport Hero from './components/Hero';\nimport GolfStats from './components/GolfStats'\n\nfunction App() {\n  return (\n  <div className=\"App\">\n      <Container>\n        <Hero/>\n      <GolfStats/>\n      </Container>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}